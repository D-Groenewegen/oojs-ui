@import 'common';

.theme-oo-ui-element () {}

.theme-oo-ui-buttonElement () {
	> .oo-ui-buttonElement-button {
		position: relative;
		font-weight: bold;
		text-decoration: none;

		&:focus {
			outline: 0;
		}

		> .oo-ui-iconElement-icon,
		> .oo-ui-indicatorElement-indicator {
			position: absolute;
			top: 0;
			height: 100%;
		}
	}

	&.oo-ui-iconElement {
		> .oo-ui-buttonElement-button {
			> .oo-ui-iconElement-icon {
				display: block;
			}
		}
	}

	&.oo-ui-labelElement > .oo-ui-buttonElement-button,
	// Support `<input>` from ButtonInputWidget
	> input.oo-ui-buttonElement-button {
		line-height: @line-height-reset;
	}

	&.oo-ui-labelElement {
		> .oo-ui-buttonElement-button > .oo-ui-labelElement-label {
			line-height: @line-height-widget-singleline;
		}

		&.oo-ui-iconElement {
			> .oo-ui-buttonElement-button {
				padding-left: @padding-start-icon-only;
			}
		}

		&.oo-ui-indicatorElement {
			> .oo-ui-buttonElement-button {
				padding-right: @padding-start-indicator-plus;
			}
		}
	}

	&.oo-ui-indicatorElement {
		// Indicator (-only)
		> .oo-ui-buttonElement-button {
			> .oo-ui-indicatorElement-indicator {
				display: block;
			}
		}

		// Indicator and label/icon
		&.oo-ui-labelElement,
		&.oo-ui-iconElement {
			> .oo-ui-buttonElement-button > .oo-ui-indicatorElement-indicator {
				right: @padding-horizontal-default;
			}
		}
	}

	&.oo-ui-widget-enabled {
		> .oo-ui-buttonElement-button {
			.oo-ui-transition(
				background-color @transition-ease-quick,
				color @transition-ease-quick,
				border-color @transition-ease-quick,
				box-shadow @transition-ease-quick
			);

			> .oo-ui-iconElement-icon,
			> .oo-ui-indicatorElement-indicator {
				opacity: @opacity-icon-default;
				.oo-ui-transition(
					opacity @transition-ease-quick
				);

				&.oo-ui-image-invert {
					opacity: @opacity-icon-default-selected;
				}
			}

			&:hover {
				> .oo-ui-iconElement-icon,
				> .oo-ui-indicatorElement-indicator {
					opacity: @opacity-icon-default-hover;

					&.oo-ui-image-invert {
						opacity: @opacity-icon-default-selected;
					}
				}
			}
		}

		&.oo-ui-buttonElement-pressed {
			> .oo-ui-buttonElement-button {
				> .oo-ui-iconElement-icon,
				> .oo-ui-indicatorElement-indicator {
					opacity: @opacity-icon-default-selected;
				}
			}
		}
	}

	&-frameless {
		> .oo-ui-buttonElement-button {
			border-radius: @border-radius-frameless;
		}

		&.oo-ui-iconElement {
			// Icon (-only) framed
			> .oo-ui-buttonElement-button {
				min-width: @size-icon;
				min-height: @size-icon;

				> .oo-ui-iconElement-icon {
					left: 0;
				}
			}
		}

		&.oo-ui-labelElement {
			> .oo-ui-buttonElement-button {
				margin-left: -@border-width-default; // Address `border` below
				border-color: @border-color-frameless-fallback; // Support IE 6: `transparent` is not rendered correctly
				border-color: @border-color-frameless;
				border-style: @border-style-default;
				border-width: @border-width-default;
				padding: @padding-frameless;
			}
		}

		&.oo-ui-indicatorElement {
			> .oo-ui-buttonElement-button {
				min-width: @size-indicator;
				min-height: @size-indicator;
			}
		}

		&.oo-ui-widget-enabled {
			> .oo-ui-buttonElement-button {
				color: @color-default;

				&:hover {
					color: @color-default-hover;
				}
				&:focus {
					box-shadow: @box-shadow-frameless-focus;
				}
			}

			&.oo-ui-buttonElement-pressed > input.oo-ui-buttonElement-button,
			&.oo-ui-buttonElement-pressed > .oo-ui-buttonElement-button:active {
				color: @color-default-active;
				box-shadow: none;
			}

			&.oo-ui-flaggedElement {
				&-progressive {
					.mw-frameless-button-colored( ~'.oo-ui-buttonElement-button',  @color-progressive, @color-progressive-hover, @color-progressive-active, @color-progressive-focus );
				}

				// Deprecated in 0.16.1, see T110555
				&-constructive {
					.mw-frameless-button-colored( ~'.oo-ui-buttonElement-button', @color-progressive, @color-progressive-hover, @color-progressive-active, @color-progressive-focus );
				}

				&-destructive {
					.mw-frameless-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive, @color-destructive-hover, @color-destructive-active, @color-destructive-focus );
				}
			}

			&[class*='oo-ui-flaggedElement'] {
				> .oo-ui-buttonElement-button {
					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						opacity: @opacity-icon-default-selected;
					}
				}

				> .oo-ui-buttonElement-button:hover {
					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						opacity: @opacity-icon-default-hover;
					}
				}
			}
		}

		&.oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				color: @color-disabled;

				> .oo-ui-iconElement-icon,
				> .oo-ui-indicatorElement-indicator {
					opacity: @opacity-disabled;
				}
			}
		}
	}

	&-framed {
		> .oo-ui-buttonElement-button {
			border-radius: @border-radius-default;
			padding-left: @padding-horizontal-default;
			padding-right: @padding-horizontal-default;
		}

		&.oo-ui-iconElement {
			// Icon (-only) framed
			> .oo-ui-buttonElement-button {
				padding-top: @padding-top-icon-indicator;
				padding-bottom: 0;
				padding-left: @padding-start-icon-only;

				> .oo-ui-iconElement-icon {
					left: @start-framed-icon-only;
				}
			}

			// Icon and label/indicator framed
			&.oo-ui-labelElement,
			&.oo-ui-indicatorElement {
				> .oo-ui-buttonElement-button {
					padding-left: @padding-start-input-text-icon-label;

					> .oo-ui-iconElement-icon {
						left: @padding-start-input-text-icon;
					}
				}
			}
		}

		&.oo-ui-indicatorElement {
			// Indicator (-only) framed
			> .oo-ui-buttonElement-button {
				padding-top: @padding-top-icon-indicator;
				padding-right: @padding-start-indicator-only;
				padding-bottom: 0;

				> .oo-ui-indicatorElement-indicator {
					right: @start-framed-indicator-only;
				}
			}

			// Indicator and label/icon framed
			&.oo-ui-labelElement,
			&.oo-ui-iconElement {
				> .oo-ui-buttonElement-button {
					padding-right: @padding-start-indicator-plus;
				}
			}
		}

		&.oo-ui-labelElement {
			> .oo-ui-buttonElement-button {
				padding-top: @padding-top-default;
				padding-bottom: @padding-bottom-default;
			}
		}

		&.oo-ui-widget-disabled {
			> .oo-ui-buttonElement-button {
				background-color: @background-color-disabled-filled;
				color: @color-disabled-filled;
				border: @border-disabled;
			}
		}

		&.oo-ui-widget-enabled {
			> .oo-ui-buttonElement-button {
				background-color: @background-color-framed;
				color: @color-default;
				border: @border-default;

				&:hover {
					background-color: @background-color-framed-hover;
					color: @color-default-hover;
					border-color: @border-color-default-hover;
				}

				&:focus {
					border-color: @border-color-default-focus;
					box-shadow: @box-shadow-widget-focus;
				}
			}

			> .oo-ui-buttonElement-button:active,
			> .oo-ui-buttonElement-button:active:focus,
			&.oo-ui-buttonElement-pressed > .oo-ui-buttonElement-button {
				background-color: @background-color-framed-active;
				color: @color-default-active;
				border-color: @border-color-default-active;
				box-shadow: none;
			}

			&.oo-ui-buttonElement-active > .oo-ui-buttonElement-button {
				background-color: @color-progressive-active;
				color: @color-default-light;
				border-color: @border-color-input-binary-active;

				&:focus {
					border-color: @color-progressive-focus;
					box-shadow: @box-shadow-progressive-focus;
				}
			}

			&.oo-ui-flaggedElement {
				&-progressive {
					.mw-framed-button-colored( ~'.oo-ui-buttonElement-button', @color-progressive, @background-color-framed-hover, @border-color-framed-progressive-hover, @color-progressive-active, @color-progressive-focus );
				}

				// Deprecated in 0.16.1
				&-constructive {
					.mw-framed-button-colored( ~'.oo-ui-buttonElement-button', @color-progressive, @background-color-framed-hover, @border-color-framed-progressive-hover, @color-progressive-active, @color-progressive-focus );
				}

				&-destructive {
					.mw-framed-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive, @background-color-framed-hover, @border-color-framed-destructive-hover, @color-destructive-active, @color-destructive-focus );
				}
			}

			&.oo-ui-flaggedElement-primary {
				&.oo-ui-flaggedElement {
					&-progressive {
						.mw-framed-primary-button-colored( ~'.oo-ui-buttonElement-button', @color-progressive, @color-progressive-hover, @color-progressive-active, @color-progressive-focus );
					}

					// Deprecated in 0.16.1
					&-constructive {
						.mw-framed-primary-button-colored( ~'.oo-ui-buttonElement-button', @color-progressive, @color-progressive-hover, @color-progressive-active, @color-progressive-focus );
					}

					&-destructive {
						.mw-framed-primary-button-colored( ~'.oo-ui-buttonElement-button', @color-destructive, @color-destructive-hover, @color-destructive-active, @color-destructive-focus );
					}
				}

				> .oo-ui-buttonElement-button {
					> .oo-ui-iconElement-icon,
					> .oo-ui-indicatorElement-indicator {
						opacity: @opacity-icon-default-selected;
					}
				}
			}
		}
	}
}

.theme-oo-ui-clippableElement () {}

.theme-oo-ui-draggableElement () {
	padding: @padding-menu-large;

	&-handle.oo-ui-widget-enabled:focus {
		border-radius: @border-radius-default;
		box-shadow: @box-shadow-widget-focus, 0 0 0 1px @color-progressive;
		outline: 0;
	}
}

.theme-oo-ui-draggableGroupElement () {}

.theme-oo-ui-flaggedElement () {}

.theme-oo-ui-floatableElement () {}

.theme-oo-ui-groupElement () {}

.theme-oo-ui-iconElement () {}

.theme-oo-ui-indicatorElement () {}

.theme-oo-ui-labelElement () {
	.oo-ui-labelElement-label-highlight {
		font-weight: bold;
	}
}

.theme-oo-ui-lookupElement () {}

.theme-oo-ui-pendingElement () {
	&-pending {
		.oo-ui-background-image( '@{oo-ui-default-image-path}/textures/pending.gif' );
	}
}

.theme-oo-ui-popupElement () {}

.theme-oo-ui-tabIndexedElement () {}

.theme-oo-ui-titledElement () {}
